# By default, pre-commit runs only on changed files with git commit
# To manually trigger pre-commit for the entire repo from the command line, do
# pre-commit run --all-files
repos:
  # See https://pre-commit.com/hooks.html for a list of all available hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-toml
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-yaml
        args: [--allow-multiple-documents]
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: "v0.4.4"
    hooks:
      - id: ruff
        types_or: [python, jupyter]
        args: [--config, pyproject.toml]
  - repo: https://github.com/psf/black
    rev: 22.10.0
    hooks:
      - id: black
      - id: black-jupyter
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: isort
  # Check for unused code:
  - repo: https://github.com/jendrikseipp/vulture
    rev: "v2.11"
    hooks:
      - id: vulture
  # Remove graphical output from Jupyter notebooks
  - repo: https://github.com/kynan/nbstripout
    rev: 0.7.1
    hooks:
      - id: nbstripout
        args: ["--max-size", "2048"]
  # Make sure we can deploy with poetry
  - repo: https://github.com/python-poetry/poetry
    rev: 1.8.2
    hooks:
      - id: poetry-check
      - id: poetry-lock
        args: ["--no-update"]
  # make sure doc can be built
  - repo: local
    hooks:
      - id: mkdocs-build
        name: MkDocs Build
        entry: mkdocs build
        language: system
        # Run this hook only when markdown, configuration, or source files change:
        files: \.(md|yml|yaml|py)$
        # Optional: Exclude certain files or directories:
        exclude: ^tests/|^examples/
        always_run: true
        pass_filenames: false
        stages: [commit]
