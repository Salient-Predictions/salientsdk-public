name: Continuous Integration - pytest

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened, edited]

  # run manually from Actions tab
  # https://github.com/Salient-Predictions/salientsdk/actions/workflows/ci.yaml
  workflow_dispatch:
jobs:
  ci-pytest:
    if: >
      !contains(github.event.pull_request.labels.*.name, 'skip-ci') &&
      (!github.event.pull_request || !contains(github.event.pull_request.title, 'skip-ci'))
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: "3.10"
            env_type: "minimum"
          - python-version: "3.11"
            env_type: "latest"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.2
          virtualenvs-create: false

      - name: Cache Poetry virtual environment
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: venv-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Install minimum dependencies
        if: ${{ matrix.env_type == 'minimum' }}
        run: |
          # Extract minimum versions from pyproject.toml
          NUMPY_MIN=$(grep '^numpy = ">=' pyproject.toml | sed 's/.*>=\([^,]*\).*/\1/')
          SCIPY_MIN=$(grep '^scipy = ">=' pyproject.toml | sed 's/.*>=\([^"]*\).*/\1/')
          SKLEARN_MIN=$(grep '^scikit-learn = ">=' pyproject.toml | sed 's/.*>=\([^"]*\).*/\1/')
          GEOPANDAS_MIN=$(grep '^geopandas = ">=' pyproject.toml | sed 's/.*>=\([^"]*\).*/\1/')
          PANDAS_MIN=$(grep '^pandas = ">=' pyproject.toml | sed 's/.*>=\([^,]*\).*/\1/')
          #CARTOPY_MIN=$(grep '^cartopy = ">=' pyproject.toml | sed 's/.*>=\([^"]*\).*/\1/')

          echo "Installing versions:"
          echo "numpy==${NUMPY_MIN}"
          echo "scipy==${SCIPY_MIN}"
          echo "scikit-learn==${SKLEARN_MIN}"
          echo "geopandas==${GEOPANDAS_MIN}"
          echo "pandas==${PANDAS_MIN}"
          #echo "cartopy==${CARTOPY_MIN}"

          pip install --force-reinstall \
            "numpy==${NUMPY_MIN}" \
            "scipy==${SCIPY_MIN}" \
            "scikit-learn==${SKLEARN_MIN}" \
            "geopandas==${GEOPANDAS_MIN}" \
            "pandas==${PANDAS_MIN}"
            #"cartopy==${CARTOPY_MIN}"

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SECRET_ACCESSOR }}"

      - name: Run tests
        run: poetry run pytest --cov=./salientsdk --cov-report=term
